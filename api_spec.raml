#%RAML 1.0
title: API Design Work Exercise
baseUri: http://api.workexercise.com/{version}
mediaType: application/json
protocols: HTTP
version: v0.1
documentation:
  - title: Work Exercise
    content: Felipe Caldas' API design.

types:
  Customer: !include libraries/Customer.dataType.raml

uses:
  assets: libraries/assets.libs.raml


/customer:
  get:
    description: List all customers
    is: [ assets.contentCacheable, assets.paging ]
    responses:
      200:
        body:
          application/json:
            type: Customer[]
            example: !include examples/customers.json
      404:
        body:
          properties:
            error:
  /{customer_id}:
    description: A specific customer, identified by its id
    uriParameters:
      customer_id:
        type: number
        example: 1
    get:
      responses:
        200:
          body:
            application/json:
              type: Customer
              example: !include examples/customer.json
        404:
    put: #put is idempotent, so it is a good idea to implement this for {customer_id} to guarantee an object won't be inserted/updated more than once.
      description: Update one particular customer
      body:
        application/json:
          type: Customer
    delete:
      description: Delete one particular customer
      is: [ assets.traceable ]
      responses:
        204:
  post:
    description: Creates one new customer
    is: [ assets.traceable ]
    body:
      application/json:
        type: Customer
    responses:
      201:
        body:
          properties:
